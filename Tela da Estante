import 'package:flutter/material.dart';
import 'package:book_hub_unip/LoginScreen.dart';
import 'package:book_hub_unip/DrawerTile.dart';
import 'package:book_hub_unip/main.dart';
import 'package:book_hub_unip/TelaPerfil.dart';
import 'package:smooth_star_rating/smooth_star_rating.dart';


var rating = 0.0;



class bookcase extends StatelessWidget {


  @override
  

  Future <String> bookcaseDialog(BuildContext context) {



    TextEditingController customController = new TextEditingController();

    return showDialog(context: context, builder: (context) {
      return Container(

        child: ListView(
          children: <Widget>[
            AlertDialog(
              title: Text("Informações do Livro"),
              content: Text(
                  "Título: Textos Cruéis Demais para Serem Lidos Rapidamente"
                      "\nSinopse: Atende douglas?"
                      "\nAutor: Jãozin"
                      "\nEditora: Me precupa a implementação com o Backend e BD"
                      "\nGenero: Não me julgue"
                      "\nClassificação: Sem chororo"
                      "\nTema: Nozes que lute"),
              actions: <Widget>[
                Container(
                    child: SmoothStarRating(
                      rating: rating,
                      size: 45,
                      starCount: 5,
                      onRatingChanged: (value) {

                        setState(() {
                          rating = value;
                        });
                      },
                    )
                ),
              ],

            ),
            Container(

            ),

          ],

        ),

      );
    });
  }


  Future <String> searchDialog(BuildContext context) {
    TextEditingController customController = new TextEditingController();

    return showDialog(context: context, builder: (context) {
      return AlertDialog(
        title: Text(
            "Pesquisar Livro"
        ),
        content: TextFormField(
          controller: customController,
          decoration: InputDecoration(
            labelText: "Nome do Livro",
            labelStyle: TextStyle( //definindo fonte da label "caixinha de texto"
              color: Colors.black,
              fontWeight: FontWeight.w400, //grossura do texto
              fontSize: 15,
            ),
          ),
        ),
        actions: <Widget>[
          MaterialButton(
            elevation: 5.0,
            child: Text("Procurar"),
            onPressed: () {
              Navigator.of(context).pop(customController.text.toString());
            },
          ),
        ],
      );
    });
  }


  Future <String> createDialog(BuildContext context) {
    TextEditingController customController = new TextEditingController();

    return showDialog(context: context, builder: (context) {
      return AlertDialog(
        title: Text(
            "Adicionar livro a estante"
        ),
        content: TextFormField(
          controller: customController,
          decoration: InputDecoration(
            labelText: "Nome do Livro",
            labelStyle: TextStyle( //definindo fonte da label "caixinha de texto"
              color: Colors.black,
              fontWeight: FontWeight.w400, //grossura do texto
              fontSize: 15,
            ),
          ),
        ),
        actions: <Widget>[
          MaterialButton(
            elevation: 5.0,
            child: Text("Adicionar Livro"),
            onPressed: () {
              Navigator.of(context).pop(customController.text.toString());
            },
          ),
        ],
      );
    });
  }


  String image1 = "https://a-static.mlcdn.com.br/1500x1500/livro-textos-crueis-demais-para-serem-lidos-rapidamente/magazineluiza/223242600/9e42c83227ba53a8da94ad9d59a1e3cc.jpg";
  String image2 = "https://a-static.mlcdn.com.br/618x463/livro-extraordinario/magazineluiza/089589200/c2f32d38-cacd-4308-8f6e-baf9c0f8e856.jpg";
  String image3 = "https://a-static.mlcdn.com.br/618x463/livro-harry-potter-e-a-camara-secreta/magazineluiza/089060800/1ccda8e6e7f7e675d1c1260cedcce80e.jpg";
  String image4 = "https://a-static.mlcdn.com.br/618x463/livro-tempestade-de-guerra/magazineluiza/222847800/b4430eccb5654c29ab57145d9d74b4e3.jpg";
  String image5 = "https://a-static.mlcdn.com.br/618x463/livro-diario-de-uma-garota-nada-popular-2/magazineluiza/088691000/5adfca8c-c6b3-4a52-a155-8718cca94bd0.jpg";
  String image6 = "https://a-static.mlcdn.com.br/1500x1500/livro-o-navio-dos-mortos/magazineluiza/222764100/4f84c17d-9684-453a-83c5-6a2083696302.jpg";
  String image7 = "https://a-static.mlcdn.com.br/618x463/cronicas-de-gelo-e-fogo-as-v-2-a-furia-dos-reis-edicao-leya-casa-da-palavra/livrariacultura/46055843/358d0a7eaced9af710a049ea2fa65148.jpg";
  String image8 = "https://a-static.mlcdn.com.br/618x463/livro-mundo-em-caos-volume-1/magazineluiza/224149000/60ba1458825562a7c680bc9b8d67b44f.jpg";
  String image9 = "https://a-static.mlcdn.com.br/618x463/livro-13-dias-de-meia-noite/magazineluiza/223256800/673e1f78f57afa8aa041cf82240536f8.jpg";
  String image10 = "https://a-static.mlcdn.com.br/618x463/livro-a-senhora-do-lago-the-witcher-a-saga-do-bruxo-geralt-de-rivia/magazineluiza/223117900/d8033975f494c5884ed7cb6dd5561ba4.jpg";
  String image11 = "https://images-na.ssl-images-amazon.com/images/I/51w7NmcUDqL.jpg";
  String image12 = "https://a-static.mlcdn.com.br/618x463/livro-as-cronicas-de-narnia-volume-unico/saraiva/2623167/38e95d28444a69ec5e64a1ce45ab996c.jpg";
  String image13 = "https://images-na.ssl-images-amazon.com/images/I/51mcGemiiWL._SX339_BO1,204,203,200_.jpg";
  String image14 = "https://images-na.ssl-images-amazon.com/images/I/51qnw4-mQLL._SX328_BO1,204,203,200_.jpg";
  String image15 = "https://images-na.ssl-images-amazon.com/images/I/41%2BH%2BynXnRL._SX380_BO1,204,203,200_.jpg";


  Widget build(BuildContext context) {
    Widget _buildBodyBack() =>
        Container( //função que cria fundo com degrade que irá retornar um container
          decoration: BoxDecoration( //box decoration
              gradient: LinearGradient( //gradiente para um fundo degrade
                colors: [
                  Color(0xff2A236E), //definindo cores em hexadecimal
                  Color(0xff7A74D4),

                ],
                begin: Alignment.topLeft, //definindo onde o gradiente começa
                end: Alignment.bottomRight, //definindo onde ele termina
              )
          ),
        );
    Widget _buildDrawerBack() =>
        Container( //criando uma função e dando o nome de build Drawer Back
          decoration: BoxDecoration( //dentro de um container eu defino um boxdecoration
              gradient: LinearGradient( //em seguida um gradiente linear
                colors: [
                  Color(0xff2A236E),
                  Color(0xff836FFF), //definindo cores em hexadecimal

                ],
                begin: Alignment.topLeft, //definindo onde começa
                end: Alignment.bottomRight, //definindo onde termina
              )
          ),
        );

    IconButton iconBottom(IconData simbolo, Widget page) {
      return IconButton(
        icon: Icon(simbolo),
        color: Colors.white,
        onPressed: () {
          Navigator.push(
            context,
            MaterialPageRoute(builder: (context) => page),
          );
        },
      );
    }

    return Scaffold(
      appBar: AppBar(
        title: Text("Bookhub"),
        backgroundColor: Color(0xff2A236E),
        actions: <Widget>[
          IconButton(
            icon: Icon(Icons.search),
            onPressed: () {
              searchDialog(context).then((onValue) {
                SnackBar mySnackbar = SnackBar(
                    content: Text("Resultado da Pesquisa $onValue"));
                Scaffold.of(context).showSnackBar(mySnackbar);
              });
            },
          ),
        ],
      ),
      body: Stack(
        children: <Widget>[
          _buildBodyBack(),
          SingleChildScrollView(
            child: Column(
              children: <Widget>[
                Container(
                  margin: EdgeInsets.only(top: 30, left: 20, right: 20),
                  height: 170,
                  child: ListView(
                    scrollDirection: Axis.horizontal,
                    children: <Widget>[
                      FlatButton(
                        child: Image.network(image1),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      // Image.network(image1),
                      FlatButton(
                        child: Image.network(image2),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image3),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image4),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image5),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                    ],
                  ),
                ),
                Container(
                  margin: EdgeInsets.only(top: 20, left: 20, right: 20),
                  height: 170,
                  child: ListView(
                    scrollDirection: Axis.horizontal,
                    children: <Widget>[
                      FlatButton(

                        child: Image.network(image6),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      // Image.network(image1),
                      FlatButton(
                        child: Image.network(image7),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image8),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image9),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image10),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                    ],
                  ),
                ),

                Container(
                  margin: EdgeInsets.only(top: 20, left: 20, right: 20),
                  height: 170,
                  child: ListView(
                    scrollDirection: Axis.horizontal,
                    children: <Widget>[
                      FlatButton(
                        child: Image.network(image11),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      // Image.network(image1),
                      FlatButton(
                        child: Image.network(image12),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image13),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image14),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                      FlatButton(
                        child: Image.network(image15),
                        onPressed: () {
                          bookcaseDialog(context).then((onValue) {});
                        },
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
          Align(
            alignment: Alignment.bottomRight,
            child: IconButton(
              icon: Icon(Icons.add_circle),
              color: Colors.white,
              iconSize: 60,

              onPressed: () {
                createDialog(context).then((onValue) {
                  SnackBar mySnackbar = SnackBar(
                      content: Text("Livro adicionado $onValue"));
                  Scaffold.of(context).showSnackBar(mySnackbar);
                });
              },
            ),
          ),

        ],
      ),

      drawer: Drawer( //criando a classe drawer
        child: Stack( //como o filho um stack para aparecer por cima da home tab
          children: <Widget>[
            _buildDrawerBack(), //chamando a função dentro do widget
            ListView( // criando listview para exibição de itens
              padding: EdgeInsets.only(left: 32.0, top: 0.0),
              //definindo espaçamento na borda a esquerda e no top do drawer
              children: <Widget>[
                Container(
                  margin: EdgeInsets.only(bottom: 0.0),
                  //definindo espaçamento entre o próximo conteudo listado
                  padding: EdgeInsets.fromLTRB(0.0, 8.0, 16.0, 0.0),
                  //defindo margens dentro do container
                  height: 250.0,
                  child: Stack( // criando um stack para que o texto exibido venha por cima do container caso futurammente precise colocar algo no container
                    children: <Widget>[
                      DrawerHeader(
                        child: Container(
                          alignment: Alignment.center,
                          child: Column(
                            children: <Widget>[
                              Material(
                                borderRadius: BorderRadius.all(
                                    Radius.circular(50.0)),
                                child: Image.network(
                                  TelaPerfil().perfilimg, width: 120.0,
                                  height: 120.0,),

                              )
                            ],
                          ),
                        ),
                      ),

                      Container(
                        padding: EdgeInsets.only(
                          top: 165, left: 50, right: 30,), //defindo margem
                        child: Column(
                          children: <Widget>[
                            Text("Nome da Pessoa",
                              style: TextStyle(fontSize: 20.0,
                                  fontWeight: FontWeight.bold,
                                  color: Colors.white),
                            ),
                            Text("@username",
                              style: TextStyle(
                                  fontSize: 15.0, color: Colors.white),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),

                ),
                Container(
                    padding: EdgeInsets.only(top: 0, left: 0, right: 30,),
                    //defindo margem
                    child: Column(
                      children: <Widget>[
                        DrawerTile(Icons.book, "Cadastro de Livros", Home()),
                        DrawerTile(Icons.chat, "Chat", Home()),
                        //defindo os icones ddo drawer
                        DrawerTile(Icons.settings, "Configuração", Home()),
                        DrawerTile(Icons.help, "Ajuda", Home()),
                        DrawerTile(Icons.exit_to_app, "Sair", LoginScreen()),
                      ],
                    )
                ),

              ],
            )
          ],
        ),
      ),
      bottomNavigationBar: BottomAppBar(
        color: Color(0xff2A236E),
        child: new Row(
          mainAxisSize: MainAxisSize.max,
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: <Widget>[
            iconBottom(Icons.person, TelaPerfil()),
            iconBottom(Icons.bookmark_border, Home()),
            iconBottom(Icons.menu, Home()),
            iconBottom(Icons.location_on, Home()),
            iconBottom(Icons.toc, Home()),
          ],
        ),
      ),
    );
  }


}

